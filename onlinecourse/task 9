from django.shortcuts import get_object_or_404, render
from django.http import HttpResponseRedirect
from django.urls import reverse

from .models import Exam, Choice, Submission

def submit_exam(request, exam_id):
    exam = get_object_or_404(Exam, pk=exam_id)

    if request.method == 'POST':
        selected_choices = request.POST.getlist('selected_choices')
        choices = Choice.objects.filter(pk__in=selected_choices)

        submission = Submission.objects.create(exam=exam)
        submission.choices.set(choices)

        return HttpResponseRedirect(reverse('exam_result', args=(submission.id,)))

    return render(request, 'submit_exam.html', {'exam': exam})


def exam_result(request, submission_id):
    submission = get_object_or_404(Submission, pk=submission_id)
    # Add your result evaluation logic here
    # You can access related objects like submission.exam, submission.choices, etc.
    # Determine the exam result and store it in a variable (e.g., is_passed)

    return render(request, 'exam_result.html', {'submission': submission, 'is_passed': is_passed})
from django.urls import path
from .views import submit_exam, exam_result

urlpatterns = [
    # Other URL patterns
    path('exam/<int:exam_id>/submit/', submit_exam, name='submit_exam'),
    path('exam_result/<int:submission_id>/', exam_result, name='exam_result'),
]
